
import React from 'react';
import { useUpload } from '@/context/UploadContext';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';

export function TranscriptionResults() {
  const { transcript, flashcards, isTranscribing, isGeneratingFlashcards } = useUpload();

  if (isTranscribing || isGeneratingFlashcards) {
    return (
      <div className="w-full max-w-md mx-auto mt-6 space-y-2">
        <Card className="bg-card animate-pulse">
          <CardHeader className="pb-2">
            <CardTitle className="text-lg">Processing...</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="h-4 w-full bg-muted rounded-full mb-2"></div>
            <div className="h-4 w-3/4 bg-muted rounded-full mb-2"></div>
            <div className="h-4 w-5/6 bg-muted rounded-full"></div>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (!transcript && flashcards.length === 0) {
    return null;
  }

  return (
    <div className="w-full max-w-md mx-auto mt-6 space-y-6">
      {transcript && (
        <Card className="bg-card">
          <CardHeader className="pb-2">
            <CardTitle className="text-lg">Transcript</CardTitle>
            <CardDescription>Video transcription generated by Whisper AI</CardDescription>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-muted-foreground whitespace-pre-line max-h-48 overflow-y-auto">
              {transcript}
            </p>
          </CardContent>
        </Card>
      )}

      {flashcards.length > 0 && (
        <Card className="bg-card">
          <CardHeader className="pb-2">
            <CardTitle className="text-lg">Flashcards</CardTitle>
            <CardDescription>Generated by Gemini AI based on your conversation</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              {flashcards.map((flashcard, index) => (
                <div key={index} className="p-3 bg-accent/50 rounded-lg">
                  <Badge variant="outline" className="mb-2 text-xs">
                    #flashcard #ingles
                  </Badge>
                  <p className="text-sm font-medium mb-1">{flashcard.translation}</p>
                  <Separator className="my-1.5" />
                  <p className="text-sm text-primary">{flashcard.word}</p>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
